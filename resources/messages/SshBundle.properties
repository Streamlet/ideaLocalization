auth.password=Password
auth.keypair=Key pair
auth.keypair.note=OpenSSH or PuTTY
auth.openssh=OpenSSH config and authentication agent

password.dialog.remember.tooltip=The password will be stored between application sessions.

rsync.download.complete.title=RSync download completed
rsync.download.complete.message=RSync download completed. Log file: {0}
rsync.ssh.remote.host.identification.has.changed.message=Check file known_hosts

sudo.prompt.password=Password:
sudo.prompt.try_again=Sorry, try again.
sudo.dialog.title.password_for=Sudo password for {0}

notification.group.name=Remote transfer

choose.private.key=Choose Private Key File
ide.service.view.local.port.forwarding.text={0} \u2192 {1}
ide.service.view.local.port.forwarding.tooltip=Forward TCP connections at {0} local port to {1} resource available from the server
ide.service.view.remote.port.forwarding.text={0} \u2190 {1}
ide.service.view.remote.port.forwarding.tooltip=Forward TCP connections at {1} server port to {0} resource available locally
action.Anonymous.text.log.file=Log File
notification.Anonymous.text.log.file=Log file
ssh.combo.create.configuration=<create configuration>
ssh.combo.select.configuration=<select configuration>
ssh.editor.host.label=&Host:
ssh.editor.port.label=&Port:
ssh.editor.username.label=&User name:
ssh.editor.authentication.type.label=Authentication t&ype:
ssh.editor.password.label=P&assword:
ssh.editor.save.password.combobox=Sav&e password
ssh.editor.private.key.file.label=Private &key file:
ssh.editor.passphrase.label=P&assphrase:
ssh.editor.save.passphrase.label=Sav&e passphrase
ssh.editor.invalid.setting.0=Invalid setting: {0}
ssh.editor.message.title.unable.to.connect=Unable to Connect
ssh.editor.title.connection.to.0=Connection to {0}
ssh.editor.successfully.connected=Successfully connected!
ssh.editor.can.t.connect.to.remote.host=Cannot connect to remote host
ssh.editor.can.t.connect.to.remote.host.0=Cannot connect to remote host: {0}
ssh.editor.test.connection.button=Test &Connection
ssh.editor.local.port.label=&Local port:
ssh.editor.local.port.placeholder.dynamic=<Dynamic>
ssh.credentials.form.visible.only.for.this.project=Visible only for this project
ssh.configurable.title=SSH Configurations

ssh.editor.connection.parameters.title=Connection Parameters
ssh.editor.connection.parameters.hash.known.hosts=Hash hosts in known_hosts file
ssh.editor.connection.parameters.keep.alive.should.be.positive.integer=The keep alive interval should be a positive integer.

# Splitting sentences is not a good solution for i18n, but the same approach for the same setting
# had existed for years in Deployment plugin.
ssh.editor.connection.parameters.keep.alive.before.input=Send keep alive messages every
# The key below may be set to an empty value.
ssh.editor.connection.parameters.keep.alive.after.input=seconds

# The meaning is the same as in https://man.openbsd.org/ssh_config#StrictHostKeyChecking
ssh.editor.connection.parameters.customize.strict.host.key.checking=Strict host key checking

ssh.editor.connection.parameters.strict.host.key.checking.accept-new=Accept New
ssh.editor.connection.parameters.strict.host.key.checking.accept-new.tooltip=\
  Always add new host keys to the user's known_hosts file but never allow connections to hosts with changed host keys

ssh.editor.connection.parameters.strict.host.key.checking.ask=Ask
ssh.editor.connection.parameters.strict.host.key.checking.ask.tooltip=\
  Add new host keys to the user's known_hosts file only after confirmation and never allow connections to hosts with changed host keys

ssh.editor.connection.parameters.strict.host.key.checking.no=No
ssh.editor.connection.parameters.strict.host.key.checking.no.tooltip=\
  Always add new host keys to the user's known_hosts file and allow connections to hosts with changed host keys

ssh.editor.connection.parameters.strict.host.key.checking.yes=Yes
ssh.editor.connection.parameters.strict.host.key.checking.yes.tooltip=\
  Never add new host keys to the user's known_hosts file and never allow connections to hosts with changed host keys

ssh.master.component.add.action=Add
ssh.master.component.copy.action=Copy
ssh.master.component.rename.action=Rename
ssh.master.component.rename.new.name=New name:
ssh.master.component.rename.provide.a.name.for.the.ssh.configuration=Provide a name for the SSH configuration
ssh.master.component.rename.server.or.group.named.0.already.exists=SSH configuration named ''{0}'' already exists
ssh.master.component.please.add.an.ssh.configuration=Add SSH configuration
ssh.master.component.please.select.ssh.configuration=Select SSH configuration

expired.certificate=Expired certificate.
invalid.certificate=Invalid certificate.
host.not.found=host not found
unknown.reason=unknown reason
ssh.verifier.message.connection.timeout=Connection timeout
credentials.host.is.empty={0} host is not specified
credentials.host.is.invalid={0} host is invalid
credentials.host.is.invalid.try.ip6={0} host is invalid. Please note that IPv6 addresses should be provided in square brackets, like [::1].
credentials.host.is.invalid.try.type={0} host is invalid: do not use unprintable characters
credentials.port.is.invalid={0} port is invalid
credentials.username.is.empty=User name is not specified
credentials.password.is.not.specified=Password is not specified
credentials.private.key.empty=Private key file is not specified
credentials.private.key.file.not.found=Private key file ''{0}'' not found
credentials.invalid.keypair=Keypair ''{0}'' is corrupt or has unknown format.\n Only SSH2 keys in OpenSSH format (DSA, RSA, ECDSA or ED25519) \
or PuTTY Private Key *.ppk keys are supported.
credentials.invalid.keypair.massage=Keypair ''{0}'' is corrupt or has unknown format.\n Only SSH2 keys in OpenSSH format (DSA, RSA, ECDSA or ED25519) \
or PuTTY Private Key *.ppk keys are supported.\n Error message: {1}
credentials.provided.private.key.requires.a.passphrase=Provided private key requires a passphrase

ssh.config.name.presentation.auth.password=password
ssh.config.name.presentation.auth.key=key
ssh.config.name.presentation.auth.openssh.agent=agent
ssh.config.name.presentation.placeholder.username=username
ssh.config.name.presentation.placeholder.host=host
ssh.config.name.presentation.placeholder.port=port

# {0} -- Key algorithm ("RSA", "ECDSA", "ED25591", etc.).
# {1} -- Fingerprint, hexadecimal bytes ("ab:cd:ef:01").
# {2} -- Absolute path to known_hosts file.
ssh.host.key.verifier.host.key.changed.dialog.message=\
  Warning: remote host identification has changed! IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! \
  Someone could be eavesdropping on you right now (man-in-the-middle attack)! \
  It is also possible that the host key has just been changed. \
  The fingerprint for the {0} key sent by the remote host is {1}.\n\n\
  Do you want to update the key in {2} and resume connecting?

# {0} -- Hostname (IP address or domain name)
# {1} -- Key algorithm ("RSA", "ECDSA", "ED25591", etc.).
# {2} -- Fingerprint, hexadecimal bytes ("ab:cd:ef:01").
ssh.host.key.verifier.host.key.unknown.dialog.message=\
  The authenticity of host ''{0}'' cannot be established. \
  {1} key fingerprint is {2}.\n\n\
  Are you sure you want to continue connecting?

# {0} -- Username
# {1} -- Hostname (IP address or domain name)
ssh.connecting.to.background.task.title=Connecting to {0}@{1}

# Generic title for different SSH dialog
ssh.connection.dialog.title=Connecting To Remote Host
ssh.connection.dialog.title.user.host=SSH: Connecting To {0}@{1}
ssh.connection.dialog.label.user.host=Authenticating {0}@{1}
ssh.connection.dialog.login.password=Password:
ssh.connection.dialog.login.title=Log in to: {0}@{1}:{2}
ssh.connection.dialog.passphrase.file.message=Key passphrase for the file:\n{0}
ssh.connection.prompt.message=An SSH connection requires a password
ssh.connection.dialog.loading.label=Waiting for a response from the server...
ssh.connection.dialog.button.next=Next
ssh.connection.dialog.link.manage.ssh.connection=Manage...
ssh.connection.dialog.empty.password.to.skip=Leave the field empty to skip

empty.text.localhost=localhost

ssh.connections.notifications.group.title=SSH Connections

# {0} -- authentication agent name
# {1} -- error message
ssh.connection.service.unable.to.connect.to.0.1=Unable to connect to {0}: {1}.
# {0} -- authentication agent name
ssh.connection.service.using.0.during.ssh.key.based.authentication.process.disabled=Using {0} during SSH key-based authentication process disabled.
# {0} -- authentication agent name
ssh.connection.service.notification.title.authentication.using=Authentication using {0}
ssh.connection.service.0.environment.variable.is.not.defined={0} environment variable is not defined
dialog.title.ssh.connection=SSH connection
dialog.message.remote.host.identification.has.changed=Remote Host Identification has changed
dialog.message.non.zero.exit.code=Non-zero exit code: {0}
dialog.message.error.while.parsing.process.list=Error while parsing the processes list
dialog.message.failed.to.create.ssh.process=Failed to create a ssh process
ssh=SSH
dialog.message.sudo.password.dialog.cancelled=Sudo password dialog cancelled.
dialog.title.enter.root.password=Enter Root Password
label.sudo.password.for.host=Sudo password for host "{0}":

remote.process.start=Starting Remote Process

ssh.connection.progress.title=Connecting to remote host
ssh.connection.notification.title=SSH: Connecting to {0}@{1}
ssh.connection.notification.enter.password=Enter password
ssh.connection.ignore.until.restart=Ignore until restart
ssh.connection.notification.manage.ssh.configurations=Manage SSH configurations